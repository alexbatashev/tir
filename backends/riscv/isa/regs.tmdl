enum GPR {
    X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15,
    X16, X17, X18, X19, X20, X21, X22, X23, X24, X25, X26, X27, X28, X29, X30, X31
}

impl Register for GPR {
    fn get_names(self) -> [str] {
        match self {
            GPR::X0 => ["zero", "x0"],
            GPR::X1 => ["ra", "x1"],
            GPR::X2 => ["sp", "x2"],
            GPR::X3 => ["gp", "x3"],
            GPR::X4 => ["tp", "x4"],
            GPR::X5 => ["t0", "x5"],
            GPR::X6 => ["t1", "x6"],
            GPR::X7 => ["t2", "x7"],
            GPR::X8 => ["t3", "x8"],
            GPR::X9 => ["t4", "x9"],
            GPR::X10 => ["a0", "x10"],
            GPR::X11 => ["a1", "x11"],
            GPR::X12 => ["a2", "x12"],
            GPR::X13 => ["a3", "x13"],
            GPR::X14 => ["a4", "x14"],
            GPR::X15 => ["a5", "x15"],
            GPR::X16 => ["a6", "x16"],
            GPR::X17 => ["a7", "x17"],
            GPR::X18 => ["s2", "x18"],
            GPR::X19 => ["s3", "x19"],
            GPR::X20 => ["s4", "x20"],
            GPR::X21 => ["s5", "x21"],
            GPR::X22 => ["s6", "x22"],
            GPR::X23 => ["s7", "x23"],
            GPR::X24 => ["s8", "x24"],
            GPR::X25 => ["s9", "x25"],
            GPR::X26 => ["s10", "x26"],
            GPR::X27 => ["s11", "x27"],
            GPR::X28 => ["t5", "x28"],
            GPR::X29 => ["t6", "x29"],
            GPR::X30 => ["t7", "x30"],
            GPR::X31 => ["t8", "x31"],
        }
    }

    fn get_encoding(self) -> bits<0> {
        self as bits<5> // Assuming sequential encoding from X0 = 0 to X31 = 31
    }

    fn get_register_width(self, features: Features) -> usize {
        if features.contains(RVFeatures::RV64) {
            return 64;
        }
        32
    }

    fn get_saved_by(self) -> SavedBy {
        match self {
            GPR::X0 => SavedBy::None,
            GPR::X1 | GPR::X5 | GPR::X6 | GPR::X7 | GPR::X10 | GPR::X11 | GPR::X12 | GPR::X13
            | GPR::X14 | GPR::X15 | GPR::X16 | GPR::X17 | GPR::X28 | GPR::X29 | GPR::X30 | GPR::X31 => SavedBy::Caller,
            GPR::X2 | GPR::X3 | GPR::X18 | GPR::X19 | GPR::X20 | GPR::X21 | GPR::X22 | GPR::X23
            | GPR::X24 | GPR::X25 | GPR::X26 | GPR::X27 => SavedBy::Callee,
            _ => SavedBy::None, // Default for non-essential
        }
    }
}

enum FPR {
    F0, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12, F13, F14, F15,
    F16, F17, F18, F19, F20, F21, F22, F23, F24, F25, F26, F27, F28, F29, F30, F31
}

impl Register for FPR {
    fn get_names(self) -> [str] {
        match self {
            FPR::F0 => ["ft0", "f0"],
            FPR::F1 => ["ft1", "f1"],
            FPR::F2 => ["ft2", "f2"],
            FPR::F3 => ["ft3", "f3"],
            FPR::F4 => ["ft4", "f4"],
            FPR::F5 => ["ft5", "f5"],
            FPR::F6 => ["ft6", "f6"],
            FPR::F7 => ["ft7", "f7"],
            FPR::F8 => ["fs0", "f8"],
            FPR::F9 => ["fs1", "f9"],
            FPR::F10 => ["fa0", "f10"],
            FPR::F11 => ["fa1", "f11"],
            FPR::F12 => ["fa2", "f12"],
            FPR::F13 => ["fa3", "f13"],
            FPR::F14 => ["fa4", "f14"],
            FPR::F15 => ["fa5", "f15"],
            FPR::F16 => ["fa6", "f16"],
            FPR::F17 => ["fa7", "f17"],
            FPR::F18 => ["fs2", "f18"],
            FPR::F19 => ["fs3", "f19"],
            FPR::F20 => ["fs4", "f20"],
            FPR::F21 => ["fs5", "f21"],
            FPR::F22 => ["fs6", "f22"],
            FPR::F23 => ["fs7", "f23"],
            FPR::F24 => ["fs8", "f24"],
            FPR::F25 => ["fs9", "f25"],
            FPR::F26 => ["fs10", "f26"],
            FPR::F27 => ["fs11", "f27"],
            FPR::F28 => ["ft8", "f28"],
            FPR::F29 => ["ft9", "f29"],
            FPR::F30 => ["ft10", "f30"],
            FPR::F31 => ["ft11", "f31"],
        }
    }

    fn get_encoding(self) -> bits<0> {
        self as bits<5> // Assuming sequential encoding from F0 = 0 to F31 = 31
    }

    fn get_register_width(self, features: Features) -> usize {
        if features.contains(RVFeatures::ExtD) {
            return 64;
        }
        32
    }

    fn get_saved_by(self) -> SavedBy {
        match self {
            FPR::F0 | FPR::F1 | FPR::F2 | FPR::F3 | FPR::F4 | FPR::F5 | FPR::F6 | FPR::F7
            | FPR::F10 | FPR::F11 | FPR::F12 | FPR::F13 | FPR::F14 | FPR::F15 | FPR::F16 | FPR::F17 => SavedBy::Caller,
            FPR::F8 | FPR::F9 | FPR::F18 | FPR::F19 | FPR::F20 | FPR::F21 | FPR::F22 | FPR::F23
            | FPR::F24 | FPR::F25 | FPR::F26 | FPR::F27 | FPR::F28 | FPR::F29 | FPR::F30 | FPR::F31 => SavedBy::Callee,
        }
    }
}

